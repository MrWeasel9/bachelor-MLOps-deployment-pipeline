# This manifest defines a Kubernetes Job to build and push the Docker image.
# The values in angle brackets are placeholders that Jenkins will replace.
apiVersion: batch/v1
kind: Job
metadata:
  name: model-builder-job
  namespace: mlops
spec:
  template:
    metadata:
      # This annotation tells Istio not to inject its sidecar proxy.
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - name: builder
        # CORRECTED IMAGE: Use an image that includes the Docker CLI.
        image: docker:latest
        command:
          - "sh"
          - "-c"
          - |
            set -ex
            # FIX: Install Python and pip, which are not in the 'docker' base image.
            apk add --no-cache python3 py3-pip

            # Now, install the required Python packages.
            pip install "mlflow[mlserver]==2.14.3" boto3

            # The original commands can now succeed because the Docker CLI is present.
            mlflow models build-docker -m "runs:/${RUN_ID}/model" -n "${DOCKER_IMAGE_NAME}" --enable-mlserver
            echo "${DOCKER_PASSWORD}" | docker login --username "${DOCKER_USERNAME}" --password-stdin
            docker push "${DOCKER_IMAGE_NAME}"
            echo "Build and push complete!"
        env:
        # These values will be injected by the Jenkins pipeline
        - name: RUN_ID
          value: "<RUN_ID_PLACEHOLDER>"
        - name: DOCKER_IMAGE_NAME
          value: "<DOCKER_IMAGE_NAME_PLACEHOLDER>"
        - name: DOCKER_USERNAME
          value: "<DOCKER_USERNAME_PLACEHOLDER>"
        - name: DOCKER_PASSWORD
          value: "<DOCKER_PASSWORD_PLACEHOLDER>"
        - name: MLFLOW_TRACKING_URI
          value: "http://mlflow:5000"
        - name: MLFLOW_S3_ENDPOINT_URL
          value: "http://minio:9000"
        envFrom:
        - secretRef:
            name: aws-s3-credentials
        volumeMounts:
        - name: docker-sock
          mountPath: /var/run/docker.sock
      volumes:
      - name: docker-sock
        hostPath:
          path: /var/run/docker.sock
      restartPolicy: OnFailure
  backoffLimit: 1
  activeDeadlineSeconds: 600