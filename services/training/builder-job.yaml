apiVersion: batch/v1
kind: Job
metadata:
  name: model-builder-job
  namespace: mlops
spec:
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: default

      # 1️⃣ Init‑container: build the MLflow model image context
      initContainers:
      - name: generate-build-context
        image: python:3.10-slim
        command:
          - "sh"
          - "-c"
          - |
            set -ex
            # Install MLflow + MLServer runtime
            pip install mlflow==2.14.3 mlserver mlserver-mlflow boto3
            
            # Generate Dockerfile & context for the model run returned by training
            mlflow models generate-dockerfile \
              -m "runs:/<RUN_ID_PLACEHOLDER>/model" \
              -d /workspace \
              --enable-mlserver
        env:
        - name: MLFLOW_TRACKING_URI
          value: "http://mlflow:5000"
        - name: MLFLOW_S3_ENDPOINT_URL
          value: "http://minio:9000"
        envFrom:
        - secretRef:
            name: aws-s3-credentials
        volumeMounts:
        - name: build-context
          mountPath: /workspace

      # 2️⃣ Kaniko: build & push the final image to Docker Hub
      containers:
      - name: kaniko-builder
        image: gcr.io/kaniko-project/executor:latest
        args:
          - "--context=dir:///workspace"
          - "--dockerfile=/workspace/Dockerfile"
          - "--destination=<DOCKER_IMAGE_NAME_PLACEHOLDER>"
        env:
        - name: DOCKER_CONFIG
          value: "/kaniko/.docker"
        volumeMounts:
        - name: build-context
          mountPath: /workspace
        - name: docker-config
          mountPath: /kaniko/.docker

      # Shared volumes
      volumes:
      - name: build-context
        emptyDir: {}
      - name: docker-config
        secret:
          secretName: dockerhub-creds

      restartPolicy: OnFailure
  backoffLimit: 1
  activeDeadlineSeconds: 900
